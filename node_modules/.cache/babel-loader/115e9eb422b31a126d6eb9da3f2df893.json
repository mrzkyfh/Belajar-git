{"ast":null,"code":"var _jsxFileName = \"/home/muhammad/dumbflix-frontend/src/components/MovieDetail/Episode.js\";\nimport React, { useState, useEffect } from 'react';\nimport './MovieDetails.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlayCircle } from '@fortawesome/free-solid-svg-icons';\nimport Carousel from 'nuka-carousel';\n\nconst Episode = ({\n  name,\n  episodes,\n  handlePlayNow\n}) => {\n  const [index, setIndex] = useState(0);\n  const [episode, setEpisode] = useState('');\n  let imageIndex = `image-${index}`;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"episode-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"play-now\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"icon-play\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faPlayCircle,\n    onClick: () => document.getElementsByName(imageIndex)[0].click(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 6\n    }\n  })), /*#__PURE__*/React.createElement(Carousel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, episodes.map((episode, index) => /*#__PURE__*/React.createElement(\"img\", {\n    style: {\n      height: '300px',\n      width: '500px'\n    },\n    src: `http://localhost:5000/uploads/${episode.thumbnailFilm}`,\n    alt: \"image\",\n    name: `image-${index}`,\n    key: index,\n    onClick: () => {\n      setEpisode(episode.title);\n      handlePlayNow(episode.linkFilm);\n    },\n    onMouseEnter: () => {\n      setIndex(index);\n    },\n    onMouseLeave: () => {\n      setIndex(index);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }))), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, \"Now Playing: \", name === episode ? name : name + ' ' + episode)));\n};\n\nexport default Episode;","map":{"version":3,"sources":["/home/muhammad/dumbflix-frontend/src/components/MovieDetail/Episode.js"],"names":["React","useState","useEffect","FontAwesomeIcon","faPlayCircle","Carousel","Episode","name","episodes","handlePlayNow","index","setIndex","episode","setEpisode","imageIndex","document","getElementsByName","click","map","height","width","thumbnailFilm","title","linkFilm"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,oBAAP;AAEA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,YAAT,QAA6B,mCAA7B;AAEA,OAAOC,QAAP,MAAqB,eAArB;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,QAAR;AAAkBC,EAAAA;AAAlB,CAAD,KAAuC;AACtD,QAAM,CAAEC,KAAF,EAASC,QAAT,IAAsBV,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM,CAAEW,OAAF,EAAWC,UAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;AACA,MAAIa,UAAU,GAAI,SAAQJ,KAAM,EAAhC;AAEA,sBACC;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,eAAD;AACC,IAAA,IAAI,EAAEN,YADP;AAEC,IAAA,OAAO,EAAE,MAAMW,QAAQ,CAACC,iBAAT,CAA2BF,UAA3B,EAAuC,CAAvC,EAA0CG,KAA1C,EAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADD,eAOC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACET,QAAQ,CAACU,GAAT,CAAa,CAACN,OAAD,EAAUF,KAAV,kBACb;AACC,IAAA,KAAK,EAAE;AACNS,MAAAA,MAAM,EAAE,OADF;AAENC,MAAAA,KAAK,EAAE;AAFD,KADR;AAKC,IAAA,GAAG,EAAG,iCAAgCR,OAAO,CAACS,aAAc,EAL7D;AAMC,IAAA,GAAG,EAAC,OANL;AAOC,IAAA,IAAI,EAAG,SAAQX,KAAM,EAPtB;AAQC,IAAA,GAAG,EAAEA,KARN;AASC,IAAA,OAAO,EAAE,MAAM;AACdG,MAAAA,UAAU,CAACD,OAAO,CAACU,KAAT,CAAV;AACAb,MAAAA,aAAa,CAACG,OAAO,CAACW,QAAT,CAAb;AACA,KAZF;AAaC,IAAA,YAAY,EAAE,MAAM;AACnBZ,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACA,KAfF;AAgBC,IAAA,YAAY,EAAE,MAAM;AACnBC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACA,KAlBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADF,CAPD,eA+BC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAiBH,IAAI,KAAKK,OAAT,GAAmBL,IAAnB,GAA0BA,IAAI,GAAG,GAAP,GAAaK,OAAxD,CA/BD,CADD,CADD;AAqCA,CA1CD;;AA4CA,eAAeN,OAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './MovieDetails.css';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlayCircle } from '@fortawesome/free-solid-svg-icons';\n\nimport Carousel from 'nuka-carousel';\n\nconst Episode = ({ name, episodes, handlePlayNow }) => {\n\tconst [ index, setIndex ] = useState(0);\n\tconst [ episode, setEpisode ] = useState('');\n\tlet imageIndex = `image-${index}`;\n\n\treturn (\n\t\t<div className=\"episode-container\">\n\t\t\t<div className=\"play-now\">\n\t\t\t\t<div className=\"icon-play\">\n\t\t\t\t\t<FontAwesomeIcon\n\t\t\t\t\t\ticon={faPlayCircle}\n\t\t\t\t\t\tonClick={() => document.getElementsByName(imageIndex)[0].click()}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<Carousel>\n\t\t\t\t\t{episodes.map((episode, index) => (\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\theight: '300px',\n\t\t\t\t\t\t\t\twidth: '500px'\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tsrc={`http://localhost:5000/uploads/${episode.thumbnailFilm}`}\n\t\t\t\t\t\t\talt=\"image\"\n\t\t\t\t\t\t\tname={`image-${index}`}\n\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tsetEpisode(episode.title);\n\t\t\t\t\t\t\t\thandlePlayNow(episode.linkFilm);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonMouseEnter={() => {\n\t\t\t\t\t\t\t\tsetIndex(index);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonMouseLeave={() => {\n\t\t\t\t\t\t\t\tsetIndex(index);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</Carousel>\n\t\t\t\t<p>Now Playing: {name === episode ? name : name + ' ' + episode}</p>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Episode;\n"]},"metadata":{},"sourceType":"module"}