{"ast":null,"code":"import { API } from \"../../config/api\";\nimport { GET_FILMS_ALL, GET_FILMS_MOVIES, GET_FILMS_TVSERIES, GET_FILMS_DETAILS, LOADING_TRUE, ERROR } from \"./types\"; //Get All Films\n\nexport const getFilmsAll = (category, limit) => async dispatch => {\n  try {\n    let res = await API.get(`film?page=1&limit=${limit}&categoryId=${category}`);\n    dispatch({\n      type: GET_FILMS_ALL,\n      payload: res.data.data\n    });\n  } catch (err) {\n    dispatch({\n      type: ERROR,\n      payload: \"error\"\n    });\n  }\n}; //Get Films Movies\n\nexport const getFilmsMovies = limit => async dispatch => {\n  try {\n    let res = await API.get(`/film?page=1&limit=${limit}&categoryId=2`);\n    dispatch({\n      type: GET_FILMS_MOVIES,\n      payload: res.data.data\n    });\n  } catch (err) {\n    dispatch({\n      type: ERROR,\n      payload: \"error\"\n    });\n  }\n}; //Get Films TVSeries\n\nexport const getFilmsTVSeries = limit => async dispatch => {\n  try {\n    let res = await API.get(`/film?page=1&limit=${limit}&categoryId=1`);\n    dispatch({\n      type: GET_FILMS_TVSERIES,\n      payload: res.data.data\n    });\n  } catch (err) {\n    dispatch({\n      type: ERROR,\n      payload: \"error\"\n    });\n  }\n};\nexport const getDetailsFilm = id => async dispatch => {\n  try {\n    let res = await API.get(`/film/${id}`);\n    dispatch({\n      type: GET_FILMS_DETAILS,\n      payload: res.data.data\n    });\n  } catch (err) {\n    dispatch({\n      type: ERROR,\n      payload: \"error\"\n    });\n  }\n};\nexport const addFilm = (payload, redirectToMovieList) => async dispatch => {\n  try {\n    if (payload.categoryId == 1) {\n      const {\n        title,\n        year,\n        categoryId,\n        description,\n        thumbnailFilm,\n        episodes\n      } = payload;\n      const formData = new FormData();\n      formData.append(\"title\", title);\n      formData.append(\"thumbnailFilm\", thumbnailFilm);\n      formData.append(\"year\", year);\n      formData.append(\"categoryId\", categoryId);\n      formData.append(\"description\", description);\n      const config = {\n        headers: {\n          \"content-type\": \"multipart/form-data\"\n        }\n      }; //for (var value of formData.values()) {\n      // console.log(value);\n      //}\n\n      let res = await API.post(`/film`, formData, config);\n\n      if (res) {\n        episodes.forEach(async episode => {\n          const {\n            titleEpisode,\n            linkFilm,\n            attachThumbnail\n          } = episode;\n          const formData = new FormData();\n          formData.append(\"title\", titleEpisode);\n          formData.append(\"thumbnailFilm\", attachThumbnail);\n          formData.append(\"linkFilm\", linkFilm);\n          formData.append(\"filmId\", res.data.data.id);\n          const config = {\n            headers: {\n              \"content-type\": \"multipart/form-data\"\n            }\n          };\n          await API.post(\"/episode\", formData, config);\n          redirectToMovieList();\n        });\n      }\n    } else if (payload.categoryId == 2) {\n      const {\n        title,\n        year,\n        categoryId,\n        description,\n        thumbnailFilm,\n        urlMovie\n      } = payload;\n      const formData = new FormData();\n      formData.append(\"title\", title);\n      formData.append(\"thumbnailFilm\", thumbnailFilm);\n      formData.append(\"year\", year);\n      formData.append(\"categoryId\", categoryId);\n      formData.append(\"description\", description);\n      const config = {\n        headers: {\n          \"content-type\": \"multipart/form-data\"\n        }\n      }; //for (var value of formData.values()) {\n      // console.log(value);\n      //}\n\n      let res = await API.post(`/film`, formData, config);\n\n      if (res) {\n        const formData = new FormData();\n        formData.append(\"title\", title);\n        formData.append(\"thumbnailFilm\", thumbnailFilm);\n        formData.append(\"linkFilm\", urlMovie);\n        formData.append(\"filmId\", res.data.data.id);\n        const configMovie = {\n          headers: {\n            \"content-type\": \"multipart/form-data\"\n          }\n        };\n        await API.post(\"/episode\", formData, configMovie);\n        redirectToMovieList();\n      }\n    }\n  } catch (err) {}\n};","map":{"version":3,"sources":["/home/muhammad/dumbflix-frontend/src/redux/actions/film.js"],"names":["API","GET_FILMS_ALL","GET_FILMS_MOVIES","GET_FILMS_TVSERIES","GET_FILMS_DETAILS","LOADING_TRUE","ERROR","getFilmsAll","category","limit","dispatch","res","get","type","payload","data","err","getFilmsMovies","getFilmsTVSeries","getDetailsFilm","id","addFilm","redirectToMovieList","categoryId","title","year","description","thumbnailFilm","episodes","formData","FormData","append","config","headers","post","forEach","episode","titleEpisode","linkFilm","attachThumbnail","urlMovie","configMovie"],"mappings":"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","sourcesContent":["import { API } from \"../../config/api\";\n\nimport {\n  GET_FILMS_ALL,\n  GET_FILMS_MOVIES,\n  GET_FILMS_TVSERIES,\n  GET_FILMS_DETAILS,\n  LOADING_TRUE,\n  ERROR,\n} from \"./types\";\n\n//Get All Films\nexport const getFilmsAll = (category, limit) => async (dispatch) => {\n  try {\n    let res = await API.get(\n      `film?page=1&limit=${limit}&categoryId=${category}`\n    );\n    dispatch({\n      type: GET_FILMS_ALL,\n      payload: res.data.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: ERROR,\n      payload: \"error\",\n    });\n  }\n};\n\n//Get Films Movies\nexport const getFilmsMovies = (limit) => async (dispatch) => {\n  try {\n    let res = await API.get(`/film?page=1&limit=${limit}&categoryId=2`);\n    dispatch({\n      type: GET_FILMS_MOVIES,\n      payload: res.data.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: ERROR,\n      payload: \"error\",\n    });\n  }\n};\n\n//Get Films TVSeries\nexport const getFilmsTVSeries = (limit) => async (dispatch) => {\n  try {\n    let res = await API.get(`/film?page=1&limit=${limit}&categoryId=1`);\n    dispatch({\n      type: GET_FILMS_TVSERIES,\n      payload: res.data.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: ERROR,\n      payload: \"error\",\n    });\n  }\n};\n\nexport const getDetailsFilm = (id) => async (dispatch) => {\n  try {\n    let res = await API.get(`/film/${id}`);\n    dispatch({\n      type: GET_FILMS_DETAILS,\n      payload: res.data.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: ERROR,\n      payload: \"error\",\n    });\n  }\n};\n\nexport const addFilm = (payload, redirectToMovieList) => async (dispatch) => {\n  try {\n    if (payload.categoryId == 1) {\n      const {\n        title,\n        year,\n        categoryId,\n        description,\n        thumbnailFilm,\n        episodes,\n      } = payload;\n\n      const formData = new FormData();\n\n      formData.append(\"title\", title);\n      formData.append(\"thumbnailFilm\", thumbnailFilm);\n      formData.append(\"year\", year);\n      formData.append(\"categoryId\", categoryId);\n      formData.append(\"description\", description);\n\n      const config = {\n        headers: {\n          \"content-type\": \"multipart/form-data\",\n        },\n      };\n\n      //for (var value of formData.values()) {\n      // console.log(value);\n      //}\n\n      let res = await API.post(`/film`, formData, config);\n\n      if (res) {\n        episodes.forEach(async (episode) => {\n          const { titleEpisode, linkFilm, attachThumbnail } = episode;\n\n          const formData = new FormData();\n\n          formData.append(\"title\", titleEpisode);\n          formData.append(\"thumbnailFilm\", attachThumbnail);\n          formData.append(\"linkFilm\", linkFilm);\n          formData.append(\"filmId\", res.data.data.id);\n\n          const config = {\n            headers: {\n              \"content-type\": \"multipart/form-data\",\n            },\n          };\n\n          await API.post(\"/episode\", formData, config);\n          redirectToMovieList();\n        });\n      }\n    } else if (payload.categoryId == 2) {\n      const {\n        title,\n        year,\n        categoryId,\n        description,\n        thumbnailFilm,\n        urlMovie,\n      } = payload;\n\n      const formData = new FormData();\n\n      formData.append(\"title\", title);\n      formData.append(\"thumbnailFilm\", thumbnailFilm);\n      formData.append(\"year\", year);\n      formData.append(\"categoryId\", categoryId);\n      formData.append(\"description\", description);\n\n      const config = {\n        headers: {\n          \"content-type\": \"multipart/form-data\",\n        },\n      };\n\n      //for (var value of formData.values()) {\n      // console.log(value);\n      //}\n\n      let res = await API.post(`/film`, formData, config);\n\n      if (res) {\n        const formData = new FormData();\n\n        formData.append(\"title\", title);\n        formData.append(\"thumbnailFilm\", thumbnailFilm);\n        formData.append(\"linkFilm\", urlMovie);\n        formData.append(\"filmId\", res.data.data.id);\n\n        const configMovie = {\n          headers: {\n            \"content-type\": \"multipart/form-data\",\n          },\n        };\n\n        await API.post(\"/episode\", formData, configMovie);\n        redirectToMovieList();\n      }\n    }\n  } catch (err) {}\n};\n"]},"metadata":{},"sourceType":"module"}