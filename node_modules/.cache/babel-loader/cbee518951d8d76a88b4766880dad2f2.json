{"ast":null,"code":"var _jsxFileName = \"/home/muhammad/dumbflix-frontend/src/pages/IncomingTransaction.js\";\nimport React, { useEffect } from 'react';\nimport './css/Transcation.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCaretDown } from '@fortawesome/free-solid-svg-icons';\nimport { connect } from 'react-redux';\nimport { getTransaction, updatePayment } from '../redux/actions/payment';\nimport PropTypes from 'prop-types';\nimport dayjs from 'dayjs';\n\nconst IncomingTransaction = ({\n  getTransaction,\n  updatePayment,\n  payment: {\n    transaction,\n    loading\n  }\n}) => {\n  let dateNow = dayjs();\n  let now = dateNow.format('YYYY-MM-DD');\n  useEffect(() => {\n    getTransaction();\n  }, [getTransaction]);\n\n  const handleUpdate = (status, idTransaction, idUser) => {\n    updatePayment(status, idTransaction, idUser);\n  };\n\n  const data = transaction.map((data, index) => {\n    let due_Date = dayjs(data.userInfo.dueDate);\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: data.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 5\n      }\n    }, index + 1), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 5\n      }\n    }, data.userInfo.fullName), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      style: {\n        width: '200px'\n      },\n      src: `http://localhost:5000/uploads/${data.attache}`,\n      alt: \"data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 6\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 5\n      }\n    }, due_Date.diff(now, 'day') > 0 ? due_Date.diff(now, 'day') : 0, \" Days\"), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        color: data.userInfo.subscribe ? '#0ACF83' : '#FF0742'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }\n    }, data.userInfo.subscribe ? 'Active' : 'Not Active'), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        color: data.status == 'Approved' ? '#0ACF83' : data.status == 'Pending' ? '#F7941E' : '#FF0742'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }\n    }, data.status), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        fontSize: '20px',\n        cursor: 'pointer',\n        color: '#1C9CD2'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 6\n      }\n    }, data.status === 'Approved' || data.status === 'Reject' ? null : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dropdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dropdown-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      style: {\n        color: '#0ACF83'\n      },\n      onClick: () => handleUpdate('Approved', data.id, data.userInfo.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 12\n      }\n    }, \"Aktifasi\"), /*#__PURE__*/React.createElement(\"li\", {\n      style: {\n        color: 'red'\n      },\n      onClick: () => handleUpdate('Reject', data.id, data.userInfo.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 12\n      }\n    }, \"Reject\")))), /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faCaretDown,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    })))));\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"transcation-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 4\n    }\n  }, \"Incoming Transcation\"), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"transcation-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, \"No\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, \"Users\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, \"Bukti Transfer\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, \"Remaining Aktif\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }, \"Status User\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }, \"Status Payment\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, \"Aksi\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 5\n    }\n  }, data)));\n};\n\nIncomingTransaction.propTypes = {\n  getTransaction: PropTypes.func.isRequired,\n  payment: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  payment: state.payment\n});\n\nexport default connect(mapStateToProps, {\n  getTransaction,\n  updatePayment\n})(IncomingTransaction);","map":{"version":3,"sources":["/home/muhammad/dumbflix-frontend/src/pages/IncomingTransaction.js"],"names":["React","useEffect","FontAwesomeIcon","faCaretDown","connect","getTransaction","updatePayment","PropTypes","dayjs","IncomingTransaction","payment","transaction","loading","dateNow","now","format","handleUpdate","status","idTransaction","idUser","data","map","index","due_Date","userInfo","dueDate","id","fullName","width","attache","diff","color","subscribe","fontSize","cursor","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport './css/Transcation.css';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCaretDown } from '@fortawesome/free-solid-svg-icons';\nimport { connect } from 'react-redux';\nimport { getTransaction, updatePayment } from '../redux/actions/payment';\nimport PropTypes from 'prop-types';\nimport dayjs from 'dayjs';\n\nconst IncomingTransaction = ({\n\tgetTransaction,\n\tupdatePayment,\n\tpayment: { transaction, loading }\n}) => {\n\tlet dateNow = dayjs();\n\tlet now = dateNow.format('YYYY-MM-DD');\n\n\tuseEffect(\n\t\t() => {\n\t\t\tgetTransaction();\n\t\t},\n\t\t[ getTransaction ]\n\t);\n\n\tconst handleUpdate = (status, idTransaction, idUser) => {\n\t\tupdatePayment(status, idTransaction, idUser);\n\t};\n\n\tconst data = transaction.map((data, index) => {\n\t\tlet due_Date = dayjs(data.userInfo.dueDate);\n\t\treturn (\n\t\t\t<tr key={data.id}>\n\t\t\t\t<td>{index + 1}</td>\n\t\t\t\t<td>{data.userInfo.fullName}</td>\n\t\t\t\t<td>\n\t\t\t\t\t<img\n\t\t\t\t\t\tstyle={{ width: '200px' }}\n\t\t\t\t\t\tsrc={`http://localhost:5000/uploads/${data.attache}`}\n\t\t\t\t\t\talt=\"data\"\n\t\t\t\t\t/>\n\t\t\t\t</td>\n\t\t\t\t<td>\n\t\t\t\t\t{due_Date.diff(now, 'day') > 0 ? due_Date.diff(now, 'day') : 0} Days\n\t\t\t\t</td>\n\t\t\t\t<td\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tcolor: data.userInfo.subscribe ? '#0ACF83' : '#FF0742'\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{data.userInfo.subscribe ? 'Active' : 'Not Active'}\n\t\t\t\t</td>\n\t\t\t\t<td\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tcolor:\n\t\t\t\t\t\t\tdata.status == 'Approved'\n\t\t\t\t\t\t\t\t? '#0ACF83'\n\t\t\t\t\t\t\t\t: data.status == 'Pending' ? '#F7941E' : '#FF0742'\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{data.status}\n\t\t\t\t</td>\n\t\t\t\t<td>\n\t\t\t\t\t<span\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tfontSize: '20px',\n\t\t\t\t\t\t\tcursor: 'pointer',\n\t\t\t\t\t\t\tcolor: '#1C9CD2'\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{data.status === 'Approved' || data.status === 'Reject' ? null : (\n\t\t\t\t\t\t\t<div className=\"dropdown\">\n\t\t\t\t\t\t\t\t<div className=\"dropdown-content\">\n\t\t\t\t\t\t\t\t\t<label htmlFor=\"\">\n\t\t\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ color: '#0ACF83' }}\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleUpdate(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'Approved',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.id,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.userInfo.id\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\tAktifasi\n\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ color: 'red' }}\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleUpdate(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'Reject',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.id,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.userInfo.id\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\tReject\n\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faCaretDown} />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</span>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t);\n\t});\n\n\treturn (\n\t\t<div className=\"transcation-container\">\n\t\t\t<h1>Incoming Transcation</h1>\n\t\t\t<table className=\"transcation-table\">\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>No</th>\n\t\t\t\t\t\t<th>Users</th>\n\t\t\t\t\t\t<th>Bukti Transfer</th>\n\t\t\t\t\t\t<th>Remaining Aktif</th>\n\t\t\t\t\t\t<th>Status User</th>\n\t\t\t\t\t\t<th>Status Payment</th>\n\t\t\t\t\t\t<th>Aksi</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>{data}</tbody>\n\t\t\t</table>\n\t\t</div>\n\t);\n};\n\nIncomingTransaction.propTypes = {\n\tgetTransaction: PropTypes.func.isRequired,\n\tpayment: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n\tpayment: state.payment\n});\n\nexport default connect(mapStateToProps, { getTransaction, updatePayment })(\n\tIncomingTransaction\n);\n"]},"metadata":{},"sourceType":"module"}